[{"content":"4～20mA模拟量转换公式为：\n(输入信号-最小值)/(最大值-最小值)×16mA+4mA。 输入信号指当前工程量，比如当前温度，当前压力。 最小值，表示工程量的最小值。 最大值，表示工程量的最大值。\n通用公式 (工程量当前值-工程量最小值)/(工程量最大值-工程量最小值)×(模拟量最大值-模拟量最小值)+模拟量最小值。\n1 \\frac{工程量当前值-工程量最小值}{工程量最大值-工程量最小值}×(模拟量最大值-模拟量最小值)+模拟量最小值 例题 有一个比例阀，2-10V 表示开度0-100%，但是通过一个单片机输出的模拟量控制，单片机某个引脚输出0-10V。通过改变单片机内部寄存器A的值来控制该引脚的输出。 A的取值范围是0-1023。那麽请问，该怎么计算？如果控制比例阀开度为50%。单片机寄存器A的值是多少？\n1, 单片机输出 0-10V 对应内部寄存器A的值为 0-1023 1 \\frac{0}{10} = \\frac{0}{1023} 2, 单片机要输出 2-10V控制比例阀，对应内部寄存器A的值为 204.6-1023 1 \\frac{2}{10} = \\frac{204.6}{1023} 3, 单片机内部寄存器A的值为 204.6-1023，对应 比例阀开度0-100% 1 \\frac{204.6}{1023} =\u0026gt;? \\frac{0}{100} 4, 根据公式可得，当比例阀开度为50时，需要设置单片机内部寄存器A的值为613.8 1 \\frac{n}{100}×(1023-204.6)+204.6 1 \\frac{50}{100}×818.4+204.6=613.8 5, 验证一下,当单片机内部寄存器A的值为613.8时，输出的电压为6V. 1 \\frac{613.8}{1023} = \\frac{V}{10} 6, 验证一下,当比例阀开度0-100%，对应模拟量2-10V。 1 \\frac{0}{100} =\u0026gt;? \\frac{2}{10} 1 \\frac{n}{100}×(10-2)+2 7，当比例阀开度50%，对应模拟量为6V，与第5步一致。 1 \\frac{50}{100}×8+2=6 ","date":"2025-04-16T20:32:27+08:00","image":"https://blog-9lw.pages.dev/p/analog_quantity_cal/aqp_hu_cabc8eb17070e6e1.jpg","permalink":"https://blog-9lw.pages.dev/p/analog_quantity_cal/","title":"模拟量计算"},{"content":" gliNET ATX1800文档 linux 工控机文档 mcgs 计算一段时间的温度波动性 mcgs 分期付款 mcgs http 驱动 单片机 资料 单片机 定时器 单片机 消抖 golang 串口 吉时利2000数字表资料用法 mcgs 计时器循环 模拟量转换 好的视频链接 有趣的东西 ","date":"2025-04-13T18:25:18+08:00","permalink":"https://blog-9lw.pages.dev/p/todo/","title":"Todo"},{"content":" 雷达液位计协议 点击下载\n静压式液位计 点击下载\n超声波流量计说明书 点击下载\n新道次隔膜泵说明书 点击下载\n新道次隔膜泵通讯协议 点击下载\n变频泵变频器说明书 点击下载\nABB变频器 ACS510说明书 点击下载\n","date":"2025-04-13T18:02:48+08:00","permalink":"https://blog-9lw.pages.dev/p/device-pdf/","title":"一些设备的PDF文档"},{"content":"ABB ACS510 变频器 485接线 485通讯设置 参数代码 设置值 描述 页码 9802 1 激活串行通讯，设置为1（标准MODBUS） 143 5302 \u0026gt;0 485从站地址 143 5303 9.6 波特率，单位为Kb/s 144 5304 2 RS485 通讯的数据长度，奇偶校验位和停止位。0=8,1,N1=8,2,N2=8,1,E3=8,1,O 144 5305 0 协议控制类型 144 1001 10 起/停和方向信号来自现场总线控制字。 70 1002 10 起/停和方向信号来自现场总线控制字。 70 1003 3 方向可以通过命令切换 71 1102 8 – 选择外部控制 1 70 1103 8 给定值来自串行通讯 72 1106 8 给定值来自串行通讯 72 4010 8 给定值来自串行通讯 [!ATTENTION] 在对通讯设置进行任何修改之后，通讯协议必须通过传动重新上电或者将站点 (5302) 清除然后再次设置来激活。\nmodbus地址 读/写 位数 描述 页码 40001 写 1 控制启停启动值 1151 停止值 1143 初始化值 1142 146 40002 写 1 设定频率,设定值范围0-20000对应实际频率0-50.00Hz，实际频率乘400即，设定值 146 40005 读 1 使用参数 5310（定义映射到 Modbus 寄存器 40005 上的参数。） 为该寄存器选择不同的实际值。 158，121 40006 读 1 使用参数 5311（定义映射到 Modbus 寄存器 40006 上的参数。） 为该寄存器选择不同的实际值。 158，121 40102 读 8 速度输出频率电流转矩功率母线电压输出电压 149 40102 读 1 速度 149 40103 读 1 输出频率(需要除以10) 149 40104 读 1 电流 149 40105 读 1 转矩 149 40106 读 1 功率 149 40107 读 1 直流母线电压 149r 40109 读 1 输出电压 149 40301 读 1 总线状态字含义8：停止状态 9：运行状态14：准备好15：复位完成 149 启动命令（假设变频器的从站地址=01，下同） ACS510的通讯启动过程： 变频器上电以后（状态为不具备合闸条件（NOT READY TO SWITCH ON）），要逐个进行6次成功的通讯才可启动完毕（每次通讯变频器的回应应与PLC所发内容相同）：\n使变频器具备合闸条件（READY TO SWITCH ON）： 01 06 00 00 00 06 09 C8 使变频器给定1的值清0（CLEAR THE EXT REF1）： 01 06 00 01 00 00 D8 0A 使变频器状态为准备就绪（READY TO OPERATE）： 01 06 00 00 00 07 C8 08 使变频器状态为允许运行（OPERATION ENABLED）： 01 06 00 00 00 0F C9 CE 使变频器状态为允许加速（ACCELERATOR ENABLED）： 01 06 00 00 00 2F C8 16 使变频器状态为运行（OPERATING）： 01 06 00 00 00 6F C9 E6 停止命令 要停止正在运行的变频器，应发停止命令（不应该以0速命令代替停止命令）。 停止命令有3种：急停1（变频器按照减速时间1（见参数2203 DECELER TIME 1）减速停止）； 急停2（设备按照惯性减速停止）； 急停3（变频器按照减速时间2（见参数2205 DECELER TIME 2）减速停止）。 一般可使用急停1（变频器的回应应与PLC所发内容相同）： 01 06 00 00 00 6D 48 27\n改变运行速度命令 正在运行（OPERATING）的变频器可接收变速命令，即通讯给定。 写入给定1保持寄存器的值0-20000对应变频器输出速度0-EXT REF1 MAX（Hz，参数1105）。 例如EXT REF1 MAX=50.0 Hz，则欲使变频器输出1 0.0 Hz，应写入20000÷5=4000即 0F A0。 （变频器的回应应与PLC所发内容相同）： 01 06 00 01 00 00 D8 0A 读变频器数据参数 可以经通讯读变频器参数如输出速度、电流、转矩、功率等参数。 若所读参数在变频器寄存器地址上连续，还可用1条读命令读多个参数。 如要读取输出电流： 01 03 00 67 00 01 35 D5 变频器的回应： 01 03 01 电流H 电流L CRCL CRCH 如要读取输出频率、电流、转矩、功率连续4个参数： 01 03 00 66 00 04 A4 16 变频器的回应： 01 03 04 频率H 频率L 电流H 电流L 转矩H 转矩L 功率H 功率L CRCL CRCH 若读回的电流字（电流H 电流L）= 01 A5 则实际电流数值为16#01A5=42.1A。\nACS510说明书下载\n资料参考1\n资料参考1\n","date":"2025-04-13T17:46:20+08:00","image":"https://blog-9lw.pages.dev/p/vfd-abb-acs510/abb_hu_d71b5f6119396535.jpg","permalink":"https://blog-9lw.pages.dev/p/vfd-abb-acs510/","title":"ABB变频器Acs510"},{"content":"编程经验 自加或自减前面要有沿信号。 PLC梯形图中停止或急停按钮可以常开 -| |-,而在外部的接线中使用常闭，如因接触不良或线路故障，可自动急停。 一定要看示例程序。 当一个子程序在一个扫描周期内多次调用时，在子程序中不能使用沿信号/定时器/计数器。 INT 表示有符号的整数。WORD 表示无符号整数。 字节不能为负数，但字和双字可以。 指针在子程序中，只能作为IN参数。 smart 200 模拟量采集满量程范围27648单极。4-20ma 5530-27648。 s7-200 为32000。4-20ma 6400-32000。 模拟量的选择，优先选用电流型，现场实践证明，电流型比电压型抗干扰能力高80%。 优先选用模拟量类型去调控第三方控制器件，因为模拟量的响应速度要远远大于通信的响应速度。 对于使用起保停编程法写的程序。启动按钮需要使用沿信号。电路中使用自复位按钮，如果按钮出现物理损坏，按钮不能自动复位，在PLC中使用沿信号可以保证按钮只接通一次。 编程规范 1. I/O分配 合理的I/O分配是程序稳定的坚实基础 把功能一样的输入、输出归结在一起。 这样做方便程序编写，查找方便，外部接线也不容易接错。 如果点数允许的情况下，预先空出高速计数和脉冲输出(Q0.0、Q0.1 和 Q0.3)的输入输出点。以备工艺上的变更。 急停按钮，停止按钮，前进、后退、上升、下降这些极限限位，推荐外部接开关的常闭触点，程序里面用常开触点，这样的好处是，执行机构不会因为开关失灵，而造成机械设备损伤等意外。\n2. 内存元件规划 内存软元件规划 稳定的程序离不开良好的软元件规划 同样的工艺，有的程序看起来错综复杂，没有头绪，而有的程序看起来清爽无比，一目了然，这就是内存软元件合理规划的结果。 VB0-VB19分配给读取系统时间相关以及类型转换。 VB20-VB27分配给写入统时间。 VB50-VB90分配给写入错误代码。 M0.0-M0.7 分配给系统全局标志位。 m3.0-m5.0 分配给Modbus通讯选择。 m27.0-m31.7 分配给Modbus通讯标志位。 做到同区域连续使用，切勿乱序使用。 需要运算的以偶数开头，用浮点数运算，这样既能提高运算精度，又能避免地址冲突和叠加。 因为整数、双整数的除法运算存在余数问题，需要占用额外的寄存器存放余数，使用浮点运算就能避免这个问题。 在多轴控制系统中，建议每轴的运算存储寄存器也要区别开。 在写程序时先规划地址，再写程序。并为地址写好注释。 程序符号命名规则如下表。\n功能 规则 举例 手自动切换 *_ha b1_ha 手动启停 *_on_off b1_on_off 报警 alert_ * alert_dyw 警告 warn_ * warn_dyw 真实值 real_* real_yw 原始值 ori_* ori_yw 上限 *_upper yw_upper 下限 *_lower yw_lower 某和 sum_* sum_yw 开始时 *_start_hour b1_start_hour 开始分 *_start_mui b1_start_mui 结束时 *_stop_hour b1_stop_hour 结束分 *_stop_mui b1_stop_mui 运行时间 *_run_time b1_run_time 间隔时间 *_spac_time b1_spac_time 标志位 *_flag b1_on_flag 模式 *_mode b1_mode 临时值 temp_* temp_yw 从站号 slave_* slave_b1 类型选择 *_type b1_type 选用 select_* select_b1 设置值 Set* SetYear 读写地址 *_addr b1_addr 状态记录 *_status b1_status 周期 *_cycle b1_cycle 清除 clear_* clear_yw 平均值 avg_* avg_yw 错误 *_err b1_err 内存规划就象仓库划分区域一样，不同的区域存放不同的数据，不同的用途，划分不同的区域，做到有迹可循。\n3. 参数计算部分编程 先乘后除，提高计算精度。 建议所有的数据运算全部使用浮点运算，这样触摸屏上的参数显示和设置用统一的格式32位浮点数。 触摸屏上的显示参数控件和设置参数控件用颜色加以区分，这样不会误导操作人员，也会避免不必要的麻烦。 例如灰底黑框为显示控件，白底黑框为输入控件。 做四则运算的时候，先乘后除，提高计算精度。运算公式，先进行精简，精简之后再拿到PLC里面做程序。 减少除法，对于比较简单的除法，可以用乘以倒数的形式。比如除以a/2，可以写成a*0.5。 对于复杂的运算公式，鉴于PLC的梯形图实现起来不直观，可以放到触摸屏脚本里面实现，计算完成之后，把结果再回传到PLC里面。 PLC程序里面先进行数据运算，运算完成之后，再拿运算结果进行比较，或者执行其它的动作输出。\n4. 动作执行程序编程 安全、互锁、保护 编写紧急停止、停止、限位部分的程序，防止调试的时候，设备不能停下来，或者造成机械设备的损坏。 首先要保证安全，想停止的时候，能停下来，其次才能进行其他部分程序的编写，一套没有安全保护机制的程序不是完善、完整的程序。 进行手动部分程序的编写，方便机械部分调试的顺利进行。对于正反转的控制，不仅外部接线要进行电气的互锁，而且程序里面也要加上互锁部分。 对于SET置位指令，要考虑是否用了锁存寄存器（断电保持型），在上电初始化的时候是否加上复位RST，以防设备突然启动，或者动作不按照预定动作执行。 对于高速脉冲输出指令等使用，要先进行脉冲频率、脉冲数量、加减速时间等参数的赋值，然后再启动高速脉冲指令。 进行自动部分程序的编写，当手动部分的程序编写完善之后，自动部分的程序可谓是水到渠成。 5. 整体程序优化减轻PLC运行负荷，精简程序 PLC扫描周期的时间长短，对程序能否顺畅执行，起着至关重要的作用，在输出响应要求高的场合更能体现出来。 总体来说PLC程序步骤越多，PLC的扫描周期时间越长，因此就需要把整个程序进行优化。 把程序按功能逻辑优化成若干个子程序，基本数据的运算，手动部分的操作，配方的上传下载，在执行自动程序的时候，以上程序并不是必须要执行的，因此可以把他们切除掉。 特别说明 指令的扫描时间和指令的执行时间不是一个概念，只要指令在主程序里面，PLC都会去扫描他们，具体执行与否是要看指令前面是否导通、使能。 譬如，当M8.0导通的时候，PLC会执行后面的四条浮点除法运算指令。当M8.0不导通的时候，PLC则不会执行后面的指令，但还是会去扫描他们，并不会跳转下去执行别的指令，当程序里面这种状况多的时候，还是会延长扫描周期的时间。 所以，整个程序就有了化繁为简的优化空间。 初始化的参数，因为只执行一次，所以放在一个子程序里面，用作上电初始化。\n","date":"2025-04-13T17:32:47+08:00","image":"https://blog-9lw.pages.dev/p/plc-siemens-s7_200/S7-200%20SMART_hu_52f05333097d9ee3.png","permalink":"https://blog-9lw.pages.dev/p/plc-siemens-s7_200/","title":"西门子S7-200(Smart)"},{"content":"PID PID控制器是工业过程控制中广泛采用的一种控制器，其中，P、I、D分别为比例（Proportion）、积分（Integral）、微分（Differential）的简写； 将偏差的比例、积分和微分通过线性组合构成控制量，用该控制量对受控对象进行控制，称为PID算法。 其中KP、KI、KD分别为比例系数、积分系数、微分系数。\n简介 P表示正比例项。比例控制器的输出u(t)与输入偏差e(t)成正比，能迅速反映偏差，从而减小偏差，但不能消除稳态误差。 稳态误差是指系统控制过程趋于稳定时，给定值与输出量的实测值之差。 偏差存在，才能使控制器维持一定的控制量输出，因此比例控制器必然存在着稳态误差。 由偏差理论知，增大比例虽然可以减小偏差，但不能彻底消除偏差。比例控制作用的大小除与偏差e(t)有关之外，还取决于比例系数Kp的大小。 比例系数Kp越小，控制作用越小，系统响应越慢；反之，比例系数Kp越大，控制作用也越强，则系统响应越快。 但是，Kp过大会使系统产生较大的超调和振荡，导致系统的稳定性能变差。 P=Kp*△ △表示目标值与当前值的误差。\nI表示积分项 积分作用的强弱，取决于积分时间常数Ti，Ti越大积分作用越弱，反之则越强。 积分控制作用的存在与偏差e(t)的存在时间有关，只要系统存在着偏差，积分环节就会不断起作用。 在积分时间足够的情况下，可以完全消除稳态误差，这时积分控制作用将维持不变。Ti越小，积分速度越快，积分作用越强。 积分作用太强会使系统超调加大，甚至使系统出现振荡。 I=Ki*(△0+△1+△2+△3\u0026hellip;.)\nD表示微项分，表示误差的变化速率。通过微分可解决震荡问题。 微分环节有助于系统减小超调，克服振荡，加快系统的响应速度，减小调节时间，从而改善了系统的动态性能，但微分时间常数过大，会使系统出现不稳定。 微分作用不能消除稳态误差，单独使用意义不大，一般需要与比例、积分控制作用配合使用，构成PD或PID控制。 D=Kd*((△2-△1)/dt) dt表示检测时间的间隔。比如每秒检测一次，(△2-△1)表示上一次检测的误差与本次检测误差的差值。\n对于PID控制，在控制偏差输入为阶跃信号时，立即产生比例和微分控制中作用。 由于在偏差输入的瞬时，变化率非常大，微分控制作用很强，此后微分控制作用迅速衰减，但积分作用越来越大，直至最终消除稳态误差。 PID控制综合了比例、积分、微分3种作用，既能加快系统响应速度、减小振荡、克服超调，亦能有效消除稳态误差，系统的静态和动态品质得到很大改善， 因而PID控制器在工业控制中得到了最为广泛的应用。\n手动调节PID 先调Kp,Ki=0,Kd=0。始终无法到达设定值再加上Ki。当在设定值上下震荡时，再调Kd。\n口诀 参数整定找最佳,从小到大顺序查, 先是比例后积分,最后再把微分加, 曲线振荡很频繁,比例度盘要放大, 曲线漂浮绕大湾,比例度盘往小扳, 曲线偏离回复慢,积分时间往下降, 曲线波动周期长,积分时间再加长, 曲线振荡频率快,先把微分降下来, 动差大来波动慢,微分时间应加长, 理想曲线两个波,前高后低4比1。\n调整方式 上升时间 超调量 安定时间 稳态误差 稳定性 ↑Kp ↓减小 ↑增加 ↑小幅增加 ↓减少 ↓变差 ↑Ki ↓小幅减小 ↑增加 ↑增加 ↓↓大幅减少 ↓变差 ↑Kd ↓小幅减小 ↓减小 ↓减小 →变化不大 ↑变好 总结 通俗的讲，Kp比例条件相当于粗调，积分Ki是精调，把积分时间调到很大（10万），此时积分调节不再起作用。 当比例调节完成后。把比例调节为之前的80%， 然后有大到小调节积分时间。 微分的作用属于超前调节，预测误差变化趋势，提前抑制误差。 微分控制的重点不在于实际测量值的具体数值，而在其变化的方向和速度。 但局限性，如果测量信号不是很“干净”，存在毛刺干扰，会产生很多不必要甚至错误的控制信号，慎用微分。 但可以改善系统的响应速度和稳定性，对具有滞后性的被控对象，应加入微分环节。 微分时间越大，作用越强。为0时，作用为0\n","date":"2025-04-13T17:19:11+08:00","image":"https://blog-9lw.pages.dev/p/industrial-control-pid/pid_hu_1a40ca46c4cd0000.jpg","permalink":"https://blog-9lw.pages.dev/p/industrial-control-pid/","title":"PID整定"},{"content":"报表应用 报表中数据源，首记录值和末记录值，并非指组对象中某一列数据的第一次记录值和最后一次的记录值。而是指当前排序方式下,第一行和最后一行数据。 把问题想的太复杂了，又踩坑了。\n","date":"2025-04-13T16:52:41+08:00","image":"https://blog-9lw.pages.dev/images/mcgs_product_header_back.jpg","permalink":"https://blog-9lw.pages.dev/p/mcgs-report/","title":"Report"},{"content":"需求 在调试时，某参数需要以较快的是速度显示在曲线上。在调试完成后，该参数需要以一定的时间存储。 让客户自己决定某一组数据的存储频率。 现状 通常我们通过设置组对象的存盘属性，定时存储到磁盘或内存，存储周期设置为N*0.1秒。 但这种方法无法做到任意修改存储频率。\n解决方法 思路 通过 \u0026ldquo;计时器函数\u0026quot;和\u0026quot;循环策略\u0026quot;解决。\n具体步骤 在实时数据库中，添加一个变量数据统计频率，\u0026ldquo;对象类型\u0026quot;为整数。\u0026ldquo;基本属性\u0026rdquo;→\u0026ldquo;对象初值\u0026rdquo; 为120。勾选 \u0026ldquo;变化时自动保存初值\u0026rdquo;。表示数据的统计频率。默认为120秒。\n在实时数据库中，新建一个组对象组对象A， 设置\u0026quot;属性\u0026rdquo;→\u0026ldquo;存盘属性\u0026rdquo;→\u0026ldquo;存盘方式\u0026rdquo;→\u0026ldquo;勾选定时存储到磁盘\u0026rdquo;；\u0026ldquo;存盘参数\u0026rdquo;→\u0026ldquo;存储周期\u0026quot;为：0。\n[!TIP] 存储周期必须为0。\n在\u0026quot;启动策略\u0026quot;中,运行一个计时器，并设置计时器最大值，和运行模式为0（运行到上限值后重新循环运行）。如下所示代码\n1 2 !TimerRun(127) !TimerSetLimit(127,数据统计频率,0) 新建一个\u0026quot;循环策略\u0026rdquo;，\u0026ldquo;策略属性\u0026rdquo;→\u0026ldquo;勾选定时循环执行\u0026rdquo;，时间为1000ms。在此策略上新增一个\u0026quot;策略行\u0026rdquo;。 \u0026ldquo;表达式条件\u0026rdquo;→\u0026ldquo;策略行条件属性\u0026rdquo;→\u0026ldquo;表达式\u0026rdquo; 为： !TimerValue(127)。 \u0026ldquo;条件设置\u0026rdquo;→勾选 \u0026ldquo;为0时条件成立\u0026rdquo;。 \u0026ldquo;脚本程序\u0026quot;为\n1 !SaveData(数据对象.组对象A) 新增一个\u0026quot;用户窗口\u0026rdquo;，添加一个\u0026quot;输入框\u0026quot;，\u0026ldquo;操作属性\u0026quot;为 数据统计频率。 添加一个\u0026quot;标准按钮\u0026rdquo;，\u0026ldquo;基本属性\u0026rdquo;→\u0026ldquo;文本\u0026quot;内容为：保存，脚本程序为：\n1 2 数据统计频率.SaveDataInitValue() !TimerSetLimit(127,数据统计频率,0) 输入一个大于0的整数。点击\u0026quot;保存按钮\u0026rdquo;。就可以任意更改组对象的保存时间。 ","date":"2025-04-13T16:51:33+08:00","image":"https://blog-9lw.pages.dev/images/mcgs_product_header_back.jpg","permalink":"https://blog-9lw.pages.dev/p/mcgs-cycle-store/","title":"任意修改存储频率"},{"content":"一个统计HMI运行时间的脚本 统计HMI本次开机运行时间和累计运行时间\n在实时数据库新建变量：run_day,run_hour,run_minute,run_second分别表示运行的天，时，分，秒数。对象类型为整数。 在实时数据库新建变量：span_day,span_hour,span_minute,span_second,分别表示累计运行的天，时，分，秒数。 对象类型为整数。 在实时数据库新建变量：DeviceOnlineTime表示设备的上线时间。对象类型为整数。对象初值为 2021-10-01 11:00:00。 新建一个循环策略，每秒运行一次。脚本内容如下。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 DIM temp1 AS INTEGER DIM temp2 AS INTEGER DIM span_time AS INTEGER run_day=$RunTime/86400 temp1=$RunTime MOD 86400 run_hour=temp1/3600 temp2=temp1 MOD 3600 run_minute=temp2/60 run_second=temp2 MOD 60 span_time=!TimeGetSpan(!TimeGetCurrentTime(),!TimeStr2I(DeviceOnlineTime.Value)) span_day=span_time/86400 span_hour=!TimeSpanGetHours(span_time) span_minute=!TimeSpanGetMinutes(span_time) span_second=!TimeSpanGetSeconds(span_time) ","date":"2025-04-13T16:51:02+08:00","image":"https://blog-9lw.pages.dev/images/mcgs_product_header_back.jpg","permalink":"https://blog-9lw.pages.dev/p/mcgs-runtime-script/","title":"统计运行时间"},{"content":"需求 在组态时，同样的功能我们可以用更少的控件来实现。这样节省窗口空间。 我们希望一个按钮即可以有丰富的动画来显示当前的状态，又可以通过点击来切换状态。 现状 通常要实现上面的需求我们需要一个动画图形，比如圆形，矩形等等，然后配置图形的填充颜色，边线颜色，可见度，闪烁等属性。还有按钮动作。 但是图形的按钮动作没有脚本功能，无法实现复杂的逻辑。 而按钮虽然有脚本功能，但没有动画属性。 下面介绍的这种方法，可以让按钮和动画图形合二为一。\n解决方法 具体步骤 新建一个\u0026quot;窗口\u0026quot;，从工具箱中选中\u0026quot;椭圆\u0026quot;，并勾勒一个\u0026quot;椭圆\u0026quot;，鼠标选中这个\u0026quot;椭圆\u0026quot;，单击右键，找到\u0026quot;事件\u0026quot;按钮点击。 然后选中\u0026quot;Click\u0026quot; 后面按钮，点击,选中\u0026quot;事件连接脚本\u0026quot;点击，就会出现脚本编辑器。然后写入你的脚本就可以了。 [!TIP] 这个方法知道了就会，不知道有事件功能的也想不到。 另外在事件中，也可以更改控件的名称。\n","date":"2025-04-13T16:50:44+08:00","image":"https://blog-9lw.pages.dev/images/mcgs_product_header_back.jpg","permalink":"https://blog-9lw.pages.dev/p/mcgs-component-event/","title":"构件的事件"},{"content":"Mcgs 与 Modbus RTU通讯 基础知识 HMI串口引脚定义 接口 PIN 引脚定义 COM1(RS232) 2 RS232RXD 3 RS232TXD 5 GND COM2(RS485) 7 RS485+ 8 RS485- COM3(RS485) 4 RS485+ 9 RS485- COM9(RS422) 4 TXD+ 9 TXD- 5 GND 7 RXD+ 8 RXD- 支持的寄存器及功能码说明如下\n寄存器 读功能码 写功能码 功能码说明 [1区]输入继电器 0x02 \u0026ndash; 0x02: 读取输入状态 [0区]输出继电器 0x01 0x05、0x0F 0x01: 读取线圈状态0x05: 强制单个线圈0x0F: 强制多个线圈 [3区]输入寄存器 0x04 \u0026ndash; 0x04: 读输入寄存器 [4区]输出寄存器 0x03 0x06、0x10 0x03: 读保持寄存器0x06: 预置单个寄存器0x10: 预置多个寄存器 [!ATTENTION] 添加寄存器通道时，起始地址均为1，这是遵从modbusrtu协议，即所谓的“协议地址”，对于部分寄存器起始地址为0的设备，通道添加时，地址应加1处理\nPLC协议说明 离散量输出（线圈）和保持寄存器支持读请求和写请求。离散量输入（触点）和输入寄存器仅支持读请求。 参数地址 (Addr) 是起始 Modbus 地址。S7‑200 SMART 支持以下地址范围： 对于离散量输出（线圈），为 00001 至 09999 对于离散量输入（触点），为 10001 至 19999 对于输入寄存器，为 30001 至 39999 对于保持寄存器，为 40001 至 49999 和 400001 至 465535 Modbus 从站设备支持的地址决定了 Addr 的实际取值范围。 参数“计数”(Count) 用于分配要在该请求中读取或写入的数据元素数。 对于位数据类型，“Count”是位数，对于字数据类型，则表示字数。 对于地址 0xxxx，“计数”(Count) 是要读取或写入的位数 对于地址 1xxxx，“计数”(Count) 是要读取的位数 对于地址 3xxxx，“计数”(Count) 是要读取的输入寄存器字数 对于地址 4xxxx 或 4yyyyy，“计数”(Count) 是要读取或写入的保持寄存器字数 MBUS_MSG/MB_MSG2 指令最多读取或写入 120 个字或 1920 个位（240 个字节的数据）。 Count 的实际限值取决于 Modbus 从站设备的限制。 参数 DataPtr 是间接地址指针，指向 CPU 中与读/写请求相关的数据的 V 存储器。 对于读请求，将 DataPtr 设置为用于存储从 Modbus 从站读取的数据的第一个 CPU 存储单元。 对于写请求，将 DataPtr 设置为要发送到 Modbus 从站的数据的第一个 CPU 存储单元。 程序将 DataPtr 值以间接地址指针的形式传递到 MBUS_MSG/MB_MSG2。 例如，如果要写入到 Modbus 从站设备的数据始于 CPU 的地址 VW200，则 DataPtr 的值将为 \u0026amp;VB200（地址 VB200）。指针必须始终是 VB 类型，即使它们指向字数据。 保持寄存器（地址 4xxxx 或 4yyyyy）和输入寄存器（地址 3xxxx）是字值（2 个字节或 16 个位）。 CPU 字的格式与 Modbus 寄存器相同。编号较小的 V 存储器地址是寄存器的最高有效字节。编号较大的 V 存储器地址是寄存器的最低有效字节。下表显示了 CPU 字节和字寻址如何与 Modbus 寄存器格式相对应。\n1.通讯参数设置 “通用串口父设备”通讯参数设置，选择串口端口号，波特率，校验方式等。 添加子设备，设置设备的从站地址。 2.添加设备通道\n设备帮助文档 点击下载\n","date":"2025-04-13T16:28:51+08:00","image":"https://blog-9lw.pages.dev/images/mcgs_product_header_back.jpg","permalink":"https://blog-9lw.pages.dev/p/mcgs-modbus_rtu/","title":"ModbusRtu"},{"content":"Pro_视频教程_构件函数功能基础视频汇总 总链接\n类别 内容 链接 动画构件 基本图元 链接：https://mcgs.lanzoux.com/iKOP6e66bjg 标签构件 链接：https://mcgs.lanzoux.com/iSbLEe66ayf 位图构件 链接：https://mcgs.lanzoux.com/irD4Ie66a8j 输入框构件 链接：https://mcgs.lanzoux.com/i0ACZe669za 流动块构件 链接：https://mcgs.lanzoux.com/iPlZ3e669hc 百分比填充构件 链接：https://mcgs.lanzoux.com/idFGKe6694j 标准按钮构件 链接：https://mcgs.lanzoux.com/iAStGe668sh 动画按钮构件 链接：https://mcgs.lanzoux.com/i5kcTe668ba 滑动输入器构件 链接：https://mcgs.lanzoux.com/iF0q6e667ud 旋转仪表构件 链接：https://mcgs.lanzoux.com/i8KCKe666yb 动画显示构件 链接：https://mcgs.lanzoux.com/i1rs3e666jg 实时曲线构件 链接：https://mcgs.lanzoux.com/iYhiGe6666d 历史曲线构件 链接：https://mcgs.lanzoux.com/iq9yXe665md 报表构件构件 链接：https://mcgs.lanzoux.com/iTs9Pe664za 存盘数据浏览构件 链接：https://mcgs.lanzoux.com/i56XNe6641g 组合框构件 链接：https://mcgs.lanzoux.com/izVKYe663ba GIF构件 链接：https://mcgs.lanzoux.com/i3gdBe662ng XY曲线构件 链接：https://mcgs.lanzoux.com/ipfQie6623g 二维码构件 链接：https://mcgs.lanzoux.com/itArFe660md 报警条构件 链接：https://mcgs.lanzoux.com/i9zZKe660ab 报警浏览构件 链接：https://mcgs.lanzoux.com/islSGe65zlg 配方构件 链接：https://mcgs.lanzoux.com/i24Sne65xoh 键盘按钮构件 链接：https://mcgs.lanzoux.com/iZcBLe65wzc 脚本函数 脚本函数功能介绍 链接：https://mcgs.lanzoux.com/i9g7Ae694zi 系统变量函数 链接：https://mcgs.lanzoux.com/iNDCje694ra 数据对象操作函数 链接：https://mcgs.lanzoux.com/iE2sFe694dg 字符串操作函数 链接：https://mcgs.lanzoux.com/i0ESbe693tg 数学函数功能 链接：https://mcgs.lanzoux.com/iPLVHe6937e 时间运算函数 链接：https://mcgs.lanzoux.com/ia7Iye692zg 文件操作函数 链接：https://mcgs.lanzoux.com/ilBa0e692qh 用户权限函数 链接：https://mcgs.lanzoux.com/iP5dHe692cd 计时器函数 链接：https://mcgs.lanzoux.com/i0129e68zyh 内存操作函数 链接：https://mcgs.lanzoux.com/iHWZVe68yah 运行环境操作函数 链接：https://mcgs.lanzoux.com/il43Ee68x3e 专项功能 报警配置功能示例 链接：https://mcgs.lanzoux.com/ij2bxe697ab 多语言功能示例 链接：https://mcgs.lanzoux.com/i93lVe6971c 配方功能示例 链接：https://mcgs.lanzoux.com/idwWFe696pa 安全机制功能示例 链接：https://mcgs.lanzoux.com/izr6Ae6964j 运行期限功能示例 链接：https://mcgs.lanzoux.com/igHJAe695yd 设备驱动功能示例 链接：https://mcgs.lanzoux.com/i9Kfxe695pe Modbus 嵌_ModbusTCP 链接：https://mcgs.lanzoux.com/ij8fye85d5a 嵌_ModbusRTU 链接：https://mcgs.lanzoux.com/isgFre85d3i ","date":"2025-04-13T16:06:16+08:00","image":"https://blog-9lw.pages.dev/images/mcgs_product_header_back.jpg","permalink":"https://blog-9lw.pages.dev/p/mcgs-pro/","title":"Mcgs触摸屏构件"},{"content":"创建一个文章 1 hugo.exe new content post/hugo/index.md 上述代码表示 在 content/post 下面新建一个文档\nstack文档\n","date":"2025-04-13T15:33:03+08:00","image":"https://blog-9lw.pages.dev/p/hugo-use/hugo-logo-wide.svg","permalink":"https://blog-9lw.pages.dev/p/hugo-use/","title":"Hugo"},{"content":"正文测试 而这些并不是完全重要，更加重要的问题是， 带着这些问题，我们来审视一下学生会退会。 既然如何， 对我个人而言，学生会退会不仅仅是一个重大的事件，还可能会改变我的人生。 我们不得不面对一个非常尴尬的事实，那就是， 可是，即使是这样，学生会退会的出现仍然代表了一定的意义。 学生会退会，发生了会如何，不发生又会如何。 经过上述讨论， 生活中，若学生会退会出现了，我们就不得不考虑它出现了的事实。 学生会退会，到底应该如何实现。 这样看来， 在这种困难的抉择下，本人思来想去，寝食难安。 对我个人而言，学生会退会不仅仅是一个重大的事件，还可能会改变我的人生。 就我个人来说，学生会退会对我的意义，不能不说非常重大。 莎士比亚曾经提到过，人的一生是短的，但如果卑劣地过这一生，就太长了。这似乎解答了我的疑惑。 莫扎特说过一句富有哲理的话，谁和我一样用功，谁就会和我一样成功。这启发了我， 对我个人而言，学生会退会不仅仅是一个重大的事件，还可能会改变我的人生。 学生会退会，到底应该如何实现。 一般来说， 从这个角度来看， 这种事实对本人来说意义重大，相信对这个世界也是有一定意义的。 在这种困难的抉择下，本人思来想去，寝食难安。 了解清楚学生会退会到底是一种怎么样的存在，是解决一切问题的关键。 一般来说， 生活中，若学生会退会出现了，我们就不得不考虑它出现了的事实。 问题的关键究竟为何？ 而这些并不是完全重要，更加重要的问题是。\n奥斯特洛夫斯基曾经说过，共同的事业，共同的斗争，可以使人们产生忍受一切的力量。　带着这句话，我们还要更加慎重的审视这个问题： 一般来讲，我们都必须务必慎重的考虑考虑。 既然如此， 这种事实对本人来说意义重大，相信对这个世界也是有一定意义的。 带着这些问题，我们来审视一下学生会退会。 我认为， 我认为， 在这种困难的抉择下，本人思来想去，寝食难安。 问题的关键究竟为何？ 每个人都不得不面对这些问题。 在面对这种问题时， 要想清楚，学生会退会，到底是一种怎么样的存在。 我认为， 既然如此， 每个人都不得不面对这些问题。 在面对这种问题时， 那么， 我认为， 学生会退会因何而发生。\n引用 思念是最暖的忧伤像一双翅膀\n让我停不了飞不远在过往游荡\n不告而别的你 就算为了我着想\n这么沉痛的呵护 我怎么能翱翔\n最暖的憂傷 - 田馥甄\n图片 1 2 3 ![Photo by Florian Klauer on Unsplash](florian-klauer-nptLmg6jqDo-unsplash.jpg) ![Photo by Luca Bravo on Unsplash](luca-bravo-alS7ewQ41M8-unsplash.jpg) ![Photo by Helena Hertz on Unsplash](helena-hertz-wWZzXlDpMog-unsplash.jpg) ![Photo by Hudai Gayiran on Unsplash](hudai-gayiran-3Od_VKcDEAA-unsplash.jpg) 相册语法来自 Typlog\n","date":"2020-09-09T00:00:00Z","image":"https://blog-9lw.pages.dev/p/test-chinese/helena-hertz-wWZzXlDpMog-unsplash_hu_2307260c751d0e0b.jpg","permalink":"https://blog-9lw.pages.dev/p/test-chinese/","title":"Chinese Test"},{"content":"This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\nHeadings The following HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nBlockquotes The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\nBlockquote without attribution Tiam, ad mint andaepu dandae nostion secatur sequo quae. Note that you can use Markdown syntax within a blockquote.\nBlockquote with attribution Don\u0026rsquo;t communicate by sharing memory, share memory by communicating.\n— Rob Pike1\nTables Tables aren\u0026rsquo;t part of the core Markdown spec, but Hugo supports supports them out-of-the-box.\nName Age Bob 27 Alice 23 Inline Markdown within tables Italics Bold Code italics bold code A B C D E F Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus ultricies, sapien non euismod aliquam, dui ligula tincidunt odio, at accumsan nulla sapien eget ex. Proin eleifend dictum ipsum, non euismod ipsum pulvinar et. Vivamus sollicitudin, quam in pulvinar aliquam, metus elit pretium purus Proin sit amet velit nec enim imperdiet vehicula. Ut bibendum vestibulum quam, eu egestas turpis gravida nec Sed scelerisque nec turpis vel viverra. Vivamus vitae pretium sapien Code Blocks Code block with backticks 1 2 3 4 5 6 7 8 9 10 \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block indented with four spaces \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;utf-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block with Hugo\u0026rsquo;s internal highlight shortcode 1 2 3 4 5 6 7 8 9 10 \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Diff code block 1 2 3 4 5 [dependencies.bevy] git = \u0026#34;https://github.com/bevyengine/bevy\u0026#34; rev = \u0026#34;11f52b8c72fc3a568e8bb4a4cd1f3eb025ac2e13\u0026#34; - features = [\u0026#34;dynamic\u0026#34;] + features = [\u0026#34;jpeg\u0026#34;, \u0026#34;dynamic\u0026#34;] List Types Ordered List First item Second item Third item Unordered List List item Another item And another item Nested list Fruit Apple Orange Banana Dairy Milk Cheese Other Elements — abbr, sub, sup, kbd, mark GIF is a bitmap image format.\nH2O\nXn + Yn = Zn\nPress CTRL + ALT + Delete to end the session.\nMost salamanders are nocturnal, and hunt for insects, worms, and other small creatures.\nHyperlinked image The above quote is excerpted from Rob Pike\u0026rsquo;s talk during Gopherfest, November 18, 2015.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"2019-03-11T00:00:00Z","image":"https://blog-9lw.pages.dev/p/markdown-syntax-guide/pawel-czerwinski-8uZPynIu-rQ-unsplash_hu_e95a4276bf860a84.jpg","permalink":"https://blog-9lw.pages.dev/p/markdown-syntax-guide/","title":"Markdown Syntax Guide"},{"content":"Mathematical notation in a Hugo project can be enabled by using third party JavaScript libraries.\nIn this example we will be using KaTeX\nCreate a partial under /layouts/partials/math.html Within this partial reference the Auto-render Extension or host these scripts locally. Include the partial in your templates like so: 1 2 3 {{ if or .Params.math .Site.Params.math }} {{ partial \u0026#34;math.html\u0026#34; . }} {{ end }} To enable KaTeX globally set the parameter math to true in a project\u0026rsquo;s configuration To enable KaTeX on a per page basis include the parameter math: true in content files Note: Use the online reference of Supported TeX Functions\nExamples Inline math: $\\varphi = \\dfrac{1+\\sqrt5}{2}= 1.6180339887…$\nBlock math: $$ \\varphi = 1+\\frac{1} {1+\\frac{1} {1+\\frac{1} {1+\\cdots} } } $$","date":"2019-03-08T00:00:00Z","permalink":"https://blog-9lw.pages.dev/p/math-typesetting/","title":"Math Typesetting"},{"content":"Emoji can be enabled in a Hugo project in a number of ways.\nThe emojify function can be called directly in templates or Inline Shortcodes.\nTo enable emoji globally, set enableEmoji to true in your site\u0026rsquo;s configuration and then you can type emoji shorthand codes directly in content files; e.g.\n🙈 :see_no_evil: 🙉 :hear_no_evil: 🙊 :speak_no_evil:\nThe Emoji cheat sheet is a useful reference for emoji shorthand codes.\nN.B. The above steps enable Unicode Standard emoji characters and sequences in Hugo, however the rendering of these glyphs depends on the browser and the platform. To style the emoji you can either use a third party emoji font or a font stack; e.g.\n1 2 3 .emoji { font-family: Apple Color Emoji, Segoe UI Emoji, NotoColorEmoji, Segoe UI Symbol, Android Emoji, EmojiSymbols; } ","date":"2019-03-05T00:00:00Z","image":"https://blog-9lw.pages.dev/p/emoji-support/the-creative-exchange-d2zvqp3fpro-unsplash_hu_27b8954607cdb515.jpg","permalink":"https://blog-9lw.pages.dev/p/emoji-support/","title":"Emoji Support"}]